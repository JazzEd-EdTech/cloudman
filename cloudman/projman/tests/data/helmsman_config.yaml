repositories:
  - name: cloudve
    url: https://raw.githubusercontent.com/CloudVE/helm-charts/master/
  - name: jupyterhub
    url: https://jupyterhub.github.io/helm-chart/
install_templates:
    jupyter:
      repo: jupyterhub
      chart: jupyterhub
      template: |
        ingress:
          enabled: true
          path: '{{context.project.access_path}}/jupyterhub'
        hub:
          baseUrl: '{{context.project.access_path}}/jupyterhub'
        proxy:
          secretToken: '{{random_alphanumeric(65)}}'
        greeting: {{context.dummy}}
    galaxy:
      repo: cloudve
      chart: galaxy
      chart_version: 3.3.0
      context:
          storageclass: ebs-provisioner
      template: |
        config:
          oidc_backends_config.xml: |
            <?xml version="1.0"?>
            <OIDC>
                <provider name="custos">
                    <url>https://ngkc4.cloudve.org/auth</url>
                    <client_id>galaxy-auth</client_id>
                    <client_secret>{{random_alphanumeric(8)}}-{{random_alphanumeric(4)}}-{{random_alphanumeric(4)}}-{{random_alphanumeric(12)}}</client_secret>
                    <redirect_uri>https://ngkc4.cloudve.org{{context.project.access_path}}/galaxy/authnz/custos/callback</redirect_uri>
                    <realm>master</realm>
                </provider>
            </OIDC>
          galaxy.yml:
            galaxy:
              enable_oidc: true
              oidc_backends_config_file: /galaxy/server/config/oidc_backends_config.xml
              oidc_config_file: /galaxy/server/config/oidc_config.xml
          oidc_config.xml: |
            <?xml version="1.0"?>
            <OIDC>
                <Setter Property="VERIFY_SSL" Value="False" Type="bool"/>
                <Setter Property="REQUESTS_TIMEOUT" Value="3600" Type="float"/>
                <Setter Property="ID_TOKEN_MAX_AGE" Value="3600" Type="float"/>
            </OIDC>
        ingress:
          annotations:
            certmanager.k8s.io/cluster-issuer: letsencrypt-prod
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/secure-backends: "true"
          enabled: true
          hosts:
            - ngkc4.cloudve.org
          path: {{context.project.access_path}}/galaxy
          tls:
            - hosts:
                - ngkc4.cloudve.org
              secretName: ngkc4-cloudve-org-key
        persistence:
          size: 95Gi
          storageClass: nfs-provisioner
        postgresql:
          persistence:
            storageClass: {{ context.storageclass }}

charts:
  dashboard:
    name: stable/kubernetes-dashboard
    namespace: kube-system
    create_namespace: true
    values:
      enableInsecureLogin: true
      ingress:
        annotations:
          certmanager.k8s.io/cluster-issuer: letsencrypt-prod
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/secure-backends: "true"
        enabled: true
        hosts:
        - null
        - ngkc4.cloudve.org
        paths:
        - /dashboard
        - /dashboard/*
        tls:
        - hosts:
          - ngkc4.cloudve.org
          secretName: ngkc4-cloudve-org-key
      rbac:
        clusterAdminRole: true
